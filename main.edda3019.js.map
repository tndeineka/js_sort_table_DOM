{"version":3,"sources":["scripts/main.js"],"names":["tableHeaders","document","querySelectorAll","tableRows","table","querySelector","sort","header","headerIndex","indexOf","target","sortedTable","elem1","elem2","textElem1","children","innerText","textElem2","isNaN","localeCompare","parseInt","replace","append","forEach","addEventListener"],"mappings":";AAAA,aA0BC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAxBD,IAAMA,EAAeC,SAASC,iBAAiB,YACzCC,EAAYF,SAASC,iBAAiB,YACtCE,EAAQH,SAASI,cAAc,SAMrC,SAASC,EAAKC,GACNC,IAAAA,EAAc,EAAIR,GAAcS,QAAQF,EAAOG,QAE/CC,EAAc,EAAIR,GAAWG,KAAK,SAACM,EAAOC,GACxCC,IAAAA,EAAYF,EAAMG,SAASP,GAAaQ,UACxCC,EAAYJ,EAAME,SAASP,GAAaQ,UAE1CF,MAAiB,MAAjBA,EAAU,IAAeI,OAAOJ,GAK7BA,EAAUK,cAAcF,GAJtBG,SAASN,EAAUO,QAAQ,MAAO,KACvCD,SAASH,EAAUI,QAAQ,MAAO,OAMxCjB,EAAMkB,OAANlB,MAAAA,EAAgBO,EAAAA,IAnBlBX,EAAauB,QAAQ,SAAAhB,GACnBA,EAAOiB,iBAAiB,QAASlB","file":"main.edda3019.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst tableHeaders = document.querySelectorAll('thead th');\nconst tableRows = document.querySelectorAll('tbody tr');\nconst table = document.querySelector('tbody');\n\ntableHeaders.forEach(header => {\n  header.addEventListener('click', sort);\n});\n\nfunction sort(header) {\n  const headerIndex = [...tableHeaders].indexOf(header.target);\n\n  const sortedTable = [...tableRows].sort((elem1, elem2) => {\n    const textElem1 = elem1.children[headerIndex].innerText;\n    const textElem2 = elem2.children[headerIndex].innerText;\n\n    if (textElem1[0] === '$' || !isNaN(+textElem1)) {\n      return parseInt(textElem1.replace(/\\D/g, ''))\n      - parseInt(textElem2.replace(/\\D/g, ''));\n    }\n\n    return textElem1.localeCompare(textElem2);\n  });\n\n  table.append(...sortedTable);\n};\n"]}